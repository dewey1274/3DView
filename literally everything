<html><script>
Object.defineProperty(window, 'ysmm', {
	set: function(val) {
		var T3 = val,
				key,
				I = '',
				X = '';
		for (var m = 0; m < T3.length; m++) {
			if (m % 2 == 0) {
				I += T3.charAt(m);
			} else {
				X = T3.charAt(m) + X;
			}
		}
		T3 = I + X;
		var U = T3.split('');
		for (var m = 0; m < U.length; m++) {
			if (!isNaN(U[m])) {
				for (var R = m + 1; R < U.length; R++) {
					if (!isNaN(U[R])) {
						var S = U[m]^U[R];
						if (S < 10) {
							U[m] = S;
						}
						m = R;
						R = U.length;
					}
				}
			}
		}
		T3 = U.join('');
		T3 = window.atob(T3);
		T3 = T3.substring(T3.length - (T3.length - 16));
		T3 = T3.substring(0, T3.length - 16);
		key = T3;
		if (key && (key.indexOf('http://') === 0 || key.indexOf("https://") === 0)) {
			document.write('<!--');
			window.stop();

			window.onbeforeunload = null;
			window.location = key;
		}
	}
});
</script><head>

<script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
    <script src="https://threejs.org/build/three.min.js"></script>
    <script src="https://threejs.org/examples/js/libs/tween.min.js"></script>
    <script src="https://threejs.org/examples/js/libs/stats.min.js"></script>
    <script src="https://threejs.org/examples/js/loaders/OBJLoader.js"></script>
    <script type="text/javascript" src="https://www.rbxleaks.com/assets/js/OrbitControls.js"></script>

<script>
window.onload = function() {
	init()
	animate()
}
var controls;
var texLoaded;
var fullBody = false;
var tshirt = false;
var pants = false;
var canvasInfo = {
	x: 339,
	y: 339
}

function init() {
	//HTML Vars
	container = document.getElementById('container');
	canvas = document.getElementById('canvas-item');
	loading = document.getElementsByClassName('loading-canvas')[0];
	//Three.js Loaders
	var objManager = new THREE.LoadingManager();
	var texManager = new THREE.LoadingManager();
	var textureLoader = new THREE.TextureLoader(texManager)
	var objLoader = new THREE.OBJLoader(objManager);
	textureLoader.crossOrigin = '';
	//Canvas Size
	canvas.width = canvasInfo.x
	canvas.height = canvasInfo.y
	//Camera Creation
	max = new THREE.Vector3(1.481, 1.05525, 1.32464).length() * 6
	normal = 10
	camFar = Math.max(max, normal)
	camera = new THREE.PerspectiveCamera(90, canvas.width / canvas.height, 0.02, camFar);
	//Camera Controls
	controls = new THREE.OrbitControls(camera);
	controls.enableDamping = true
	controls.dampingFactor = 0.7
	controls.autoRotate = true;
	controls.enablePan = false;
	controls.minDistance = 1
	controls.maxDistance = 3
	//	controls.target.set(0, 0, 0);
	//camera.position.set(-2.962, 1.206, -5.18553);
	//Define THREE.js Scene
	camera.position.set(90, 65, 100);
	controls.update();
	scene = new THREE.Scene();
	/*
		//Make basic lighting

		var ambient = new THREE.AmbientLight(0xffffff, 1);
		//var hemisphereLight = new THREE.HemisphereLight(0xffffff, 1)
		//var spotLight = new THREE.SpotLight(0xf9f9f9, 1)
		scene.add(ambient);
		//scene.add(hemisphereLight);
		*/
	//*/
	// Lights
	//var light = new THREE.AmbientLight( 0xffffff, 0.8 );
	//scene.add(light);
	/*
var techLight = new THREE.AmbientLight(0xf4f4f4, 0.2);
      scene.add(techLight);
       var directionalLight = new THREE.DirectionalLight( 0x999999, 1);
    directionalLight.position.set( 15, 1, 0 );
    scene.add( directionalLight );
		var pointLight = new THREE.HemisphereLight( 0xffffff, 0 );
		scene.add(pointLight);
		*/
	var techLight = new THREE.AmbientLight(0xf4f4f4, 1);
	scene.add(techLight);
	var directionalLight = new THREE.DirectionalLight(0x666666);
	directionalLight.position.set(0, 2, 1);
	scene.add(directionalLight);
	//Detect if model has loaded
	/*
	objManager.onLoad = function() {
		var loadedInterval = self.setInterval(function() {
			if (texLoaded) {
				directionalLight.position.set(8, 0, 8);
				//scene.add(spotLight);
				window.clearInterval(loadedInterval)
			}
		}, 5);

	} */
	texManager.onLoad = function() {
		texLoaded = true
	}
	var manager = new THREE.LoadingManager();
	manager.onProgress = function(item, loaded, total) {
		// console.log( item, loaded, total );
	};
	var onProgress = function(xhr) {
		if (xhr.lengthComputable) {
			var percentComplete = xhr.loaded / xhr.total * 100;
			// console.log( Math.round(percentComplete, 2) + '% downloaded' );
		}
	};
	var onError = function(xhr) {};
	//Define textures here
	var facetex = new THREE.Texture();
	var textex = new THREE.Texture();
	var tshirttex = new THREE.Texture();
	var pantstex = new THREE.Texture();
	var nonetex = new THREE.Texture();
	// Load textures
	var loader = new THREE.ImageLoader(manager);
	loader.load('https://assetstorage.brick-hill.com/1dc08963-3af3-43d3-9704-bcba38901a45.png', function(teximg) {
		textex.image = teximg;
		textex.needsUpdate = true;
	});
	loader.load('https://techsworld.000webhostapp.com/3D/facev4.png', function(faceimg) {
		facetex.image = faceimg;
		facetex.needsUpdate = true;
	});
	loader.load('https://assetstorage.brick-hill.com/1dc08963-3af3-43d3-9704-bcba38901a45.png', function(tshirtimg) {
		tshirttex.image = tshirtimg;
		tshirttex.needsUpdate = true;
	});
	loader.load('https://assetstorage.brick-hill.com/1dc08963-3af3-43d3-9704-bcba38901a45.png', function(pantsimg) {
		pantstex.image = pantsimg;
		pantstex.needsUpdate = true;
	});
	loader.load('', function(noneimg) {
		nonetex.image = noneimg;
		nonetex.needsUpdate = true;
	});
	console.log('add model')
	// model
	var loader = new THREE.OBJLoader(manager);
	loader.load('https://assetstorage.brick-hill.com/1dc08963-3af3-43d3-9704-bcba38901a45.obj', function(model) {
		model.traverse(function(child) {
			if (child instanceof THREE.Mesh) {
				child.material = new
				THREE.MeshPhongMaterial({
					shininess: 0,
					shading: THREE.SmoothShading,
					color: 0xffffff,
					//map: textex
				})
				//child.material.color.setHex( 0xeab372 );
				//child.material.shading = THREE.SmoothShading;
				child.material.transparent = true;
			}
		});
		camera.lookAt(model);
		model.doubleSided = true;
		var box = new THREE.Box3().setFromObject(model);
		box.getCenter(model.position);
		model.position.multiplyScalar(-1);
		model.scale = 2;
		scene.add(model);
		//Add extra lighting
		//spotLight.target = object
		directionalLight.target = model
		scene.add(directionalLight.target);
	}, onProgress, onError);
	// uv map of model
	var loader = new THREE.OBJLoader(manager);
	loader.load('https://assetstorage.brick-hill.com/1dc08963-3af3-43d3-9704-bcba38901a45.obj', function(model) {
		model.traverse(function(child) {
			if (child instanceof THREE.Mesh) {
				child.material = new
				THREE.MeshPhongMaterial({
					shininess: 0,
					shading: THREE.SmoothShading,
					//color: 0xf3b700,
					map: textex				})
				//child.material.color.setHex( 0xeab372 );
				//child.material.shading = THREE.SmoothShading;
				child.material.transparent = true;
			}
		});
		camera.lookAt(model);
		//model.doubleSided = true;
		var box = new THREE.Box3().setFromObject(model);
		box.getCenter(model.position);
		model.position.multiplyScalar(-1);
		model.scale = 2;
		scene.add(model);
		//Add extra lighting
		//spotLight.target = object
		directionalLight.target = model
		scene.add(directionalLight.target);
	}, onProgress, onError);
	//test if it is shirt, pants or tshirt
	if (fullBody) {
		console.log('add default head');
		//Load color
		// head
		loader.load('https://techsworld.000webhostapp.com/3D/Head.obj', function(head) {
			head.traverse(function(child) {
				if (child instanceof THREE.Mesh) {
					child.material = new
					THREE.MeshPhongMaterial({
						shininess: 0,
						shading: THREE.SmoothShading,
						color: 0xf3b700
						//map: textex
						//transparent: true
					})
					//child.material.transparent = true;
				}
			});
			camera.lookAt(head);
			//head.doubleSided = true;
			var box = new THREE.Box3().setFromObject(head);
			box.getCenter(head.position);
			head.position.multiplyScalar(-1);
			head.scale = 2;
			head.position.set(0, -3, 0)
			scene.add(head);
			//Add extra lighting
			//spotLight.target = object
			directionalLight.target = head
			scene.add(directionalLight.target);
		}, onProgress, onError);
		//uv map of head
		loader.load('https://techsworld.000webhostapp.com/3D/Head.obj', function(head) {
			head.traverse(function(child) {
				if (child instanceof THREE.Mesh) {
					child.material = new
					THREE.MeshPhongMaterial({
						shininess: 0,
						shading: THREE.SmoothShading,
						//color: 0xf3b700,
						map: facetex
						//transparent: true
					})
					child.material.transparent = true;
				}
			});
			camera.lookAt(head);
			//head.doubleSided = true;
			var box = new THREE.Box3().setFromObject(head);
			box.getCenter(head.position);
			head.position.multiplyScalar(-1);
			head.scale = 2;
			head.position.set(0, -3, 0)
			scene.add(head);
			//Add extra lighting
			//spotLight.target = object
			directionalLight.target = head
			scene.add(directionalLight.target);
		}, onProgress, onError);
		console.log('add legs');
		//pants
		loader.load('https://techsworld.000webhostapp.com/3D/Legs.obj', function(pants) {
			pants.traverse(function(child) {
				if (child instanceof THREE.Mesh) {
					child.material = new
					THREE.MeshPhongMaterial({
						shininess: 0,
						shading: THREE.SmoothShading,
						color: 0xededed,
						//map: facetex
					})
					child.material.transparent = true;
				}
			});


			//camera.lookAt(pants);
			pants.doubleSided = true;
			var box = new THREE.Box3().setFromObject(pants);
			box.getCenter(pants.position);
			pants.position.multiplyScalar(-1);
			pants.scale = 2;
			pants.position.set(0, -3, 0)
			scene.add(pants);
			directionalLight.target = pants
			scene.add(directionalLight.target);
		}, onProgress, onError);
	}
	if (tshirt) {
		console.log('add tshirt');
		// tshirt
		// uv map of tshirt
		var loader = new THREE.OBJLoader(manager);
		loader.load('https://techsworld.000webhostapp.com/3D/TShirt.obj', function(tshirt) {
			tshirt.traverse(function(child) {
				if (child instanceof THREE.Mesh) {
					child.material = new
					THREE.MeshPhongMaterial({
						shininess: 0,
						shading: THREE.SmoothShading,
						//color: 0xf3b700,
						map: tshirttex
					})
					//child.material.color.setHex( 0xeab372 );
					//child.material.shading = THREE.SmoothShading;
					child.material.transparent = true;
				}
			});
			camera.lookAt(tshirt);
			//tshirt.doubleSided = true;
			var box = new THREE.Box3().setFromObject(tshirt);
			box.getCenter(tshirt.position);
			tshirt.position.multiplyScalar(-1);
			tshirt.scale = 2;
			tshirt.position.set(0, -3, 0);
			scene.add(tshirt);
			//Add extra lighting
			//spotLight.target = object
			directionalLight.target = tshirt
			scene.add(directionalLight.target);
		}, onProgress, onError);
	}
	if (pants) {
		//uv map of torso for pants
		loader.load('https://techsworld.000webhostapp.com/3D/Torso.obj', function(pants) {
			pants.traverse(function(child) {
				if (child instanceof THREE.Mesh) {
					child.material = new
					THREE.MeshPhongMaterial({
						shininess: 0,
						shading: THREE.SmoothShading,
						//color: 0xf1f1f1,
						map: pantstex
					})
					child.material.transparent = true;
				}
			});

			//camera.lookAt(pants);
			pants.doubleSided = true;
			var box = new THREE.Box3().setFromObject(pants);
			box.getCenter(pants.position);
			pants.position.multiplyScalar(-1);
			pants.scale = 2;
			pants.position.set(0, -3, 0)
			scene.add(pants);
			directionalLight.target = pants
			scene.add(directionalLight.target);
		}, onProgress, onError);
		//uv map of it
		loader.load('https://techsworld.000webhostapp.com/3D/Legs.obj', function(pants) {
			pants.traverse(function(child) {
				if (child instanceof THREE.Mesh) {
					child.material = new
					THREE.MeshPhongMaterial({
						shininess: 0,
						shading: THREE.SmoothShading,
						//color: 0xf1f1f1,
						map: pantstex
					})
					child.material.transparent = true;
				}
			});
			//camera.lookAt(pants);
			pants.doubleSided = true;
			var box = new THREE.Box3().setFromObject(pants);
			box.getCenter(pants.position);
			pants.position.multiplyScalar(-1);
			pants.scale = 2;
			pants.position.set(0, -3, 0)
			scene.add(pants);
			directionalLight.target = pants
			scene.add(directionalLight.target);
		}, onProgress, onError);
	}
	/*
        // model
        var loader = new THREE.OBJLoader( manager );
        loader.load( 'https://assetstorage.brick-hill.com/1dc08963-3af3-43d3-9704-bcba38901a45.obj', function ( model ) {
          model.traverse( function ( child ) {
            if ( child instanceof THREE.Mesh ) {
                child.material = new
					THREE.MeshPhongMaterial({
						shininess: 0,
						shading: THREE.SmoothShading,
						color: 0xeab372
					})
              //child.material.color.setHex( 0xeab372 );
              //child.material.shading = THREE.SmoothShading;
            }
          } );
          camera.lookAt(model);

          model.doubleSided = true;
          var box = new THREE.Box3().setFromObject( model );
            box.getCenter(model.position);
			model.position.multiplyScalar( - 1 );
			          model.scale = 2;
          scene.add( model );
        }, onProgress, onError );
//uv map of it
        var loader = new THREE.OBJLoader( manager );
        loader.load( 'https://assetstorage.brick-hill.com/1dc08963-3af3-43d3-9704-bcba38901a45.obj', function ( model ) {
          model.traverse( function ( child ) {
            if ( child instanceof THREE.Mesh ) {
           		 child.material = new
					THREE.MeshPhongMaterial({
						shininess: 0,
						map: facetex,
						shading: THREE.SmoothShading,
						alphaTest: 0.5
					})
              //child.material.map = facetex;
              child.material.transparent = true;
              //child.material.shading = THREE.SmoothShading;
              //child.material.opacity = 1;
            }
          } );
          model.doubleSided = true;
          var box = new THREE.Box3().setFromObject( model );
            box.getCenter(model.position);
			model.position.multiplyScalar( - 1 );
          scene.add( model );
        }, onProgress, onError );
        */
	//////
	/* Old code.. might revive this who knows
		//Load MTL, OBJ, and texture
		var tex = textureLoader.load('https://assetstorage.brick-hill.com/1dc08963-3af3-43d3-9704-bcba38901a45.png')
			objLoader.load('https://assetstorage.brick-hill.com/1dc08963-3af3-43d3-9704-bcba38901a45.obj', function(object) {
				//Set settings of Object
				camera.lookAt(object);
					camera.position.set(4.5,0,0);
					  controls.update();
				var box = new THREE.Box3().setFromObject( object );
				box.getCenter(object.position);
				object.position.multiplyScalar( - 1 );
				object.doubleSided = true;
				object.traverse(function(child) {
					if (child instanceof THREE.Mesh) {
						child.material = new
						THREE.MeshPhongMaterial({

							color: 0xffffff,
							shininess: 0,
							map: tex,
							shading: THREE.SmoothShading
						})
					}
				scene.add(object);
				//Add extra lighting
				//spotLight.target = object
				directionalLight.target = object
				scene.add(directionalLight.target);
			});

		})
		*/
	//Create canvas and set settings
	renderer = new THREE.WebGLRenderer({
		alpha: true,
		antialias: true,
		canvas: canvas,
		preserveDrawingBuffer: true
	});
	renderer.setSize(canvasInfo.x, canvasInfo.y);
	container.appendChild(renderer.domElement);
	renderer.setClearColor(0x000000, 0);
}
//Run 3D
function animate() {
	requestAnimationFrame(animate)
	render();
	controls.update();
}
//Render object
function render() {
	renderer.render(scene, camera);
	renderer.setSize(canvasInfo.x, canvasInfo.y);
}
</script>
</head>
<body style="margin: 0px;">
<div id="container">


	<canvas id="canvas-item" width="339" height="339" style="width: 339px; height: 339px;"></canvas></div>
</body></html>
